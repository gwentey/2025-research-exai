apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: exai-ingress
  namespace: exai # Assurez-vous que ce namespace est correct ou retirez-le si vous utilisez 'default'
  annotations:
    # Spécifie explicitement la classe d'ingress à utiliser (important si plusieurs contrôleurs)
    kubernetes.io/ingress.class: nginx
    # --- Changement pour utiliser l'issuer de PRODUCTION --- 
    cert-manager.io/cluster-issuer: letsencrypt-prod # Utilise notre issuer PRODUCTION
    acme.cert-manager.io/http01-edit-in-place: "true" # Aide pour certains cas avec Nginx
    # --- Fin Changement --- 
    # cert-manager.io/cluster-issuer: letsencrypt-staging # Ancienne ligne commentée si besoin
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTP" # ou HTTPS si votre service écoute en HTTPS
    
    # --- Ajout d'annotations CORS pour l'Ingress Controller ---
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization, X-Requested-With"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://exai-pipeline.fr,https://www.exai-pipeline.fr,http://localhost:8080"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "600"
    # --- Fin ajout CORS ---
spec:
  ingressClassName: nginx # Utilise le contrôleur Nginx installé
  rules:
  - host: api.exai-pipeline.fr # Votre nom d'hôte
    http:
      paths:
      - path: / # Route tout le trafic pour cet hôte
        pathType: Prefix
        backend:
          service:
            # IMPORTANT: Le nom doit correspondre EXACTEMENT au nom du Service K8s
            name: api-gateway-service 
            port:
              # Le port exposé par le Service K8s (pas le targetPort du conteneur)
              number: 80 
  # ---- NOUVELLE RÈGLE POUR LE FRONTEND ----
  - host: exai-pipeline.fr # Votre domaine racine
    http:
      paths:
      - path: / # Route tout le trafic pour ce domaine racine vers le frontend
        pathType: Prefix
        backend:
          service:
            name: frontend # Nom du service K8s du frontend
            port:
              number: 80 # Port du service K8s du frontend
  # ---- FIN NOUVELLE RÈGLE ----
  # Décommentez et configurez ceci pour HTTPS une fois que vous avez cert-manager
  tls:
  - hosts:
    - api.exai-pipeline.fr # Host pour l'API
    - exai-pipeline.fr   # Host pour le Frontend
    # Nom du Secret K8s où le certificat TLS sera stocké par cert-manager
    secretName: exai-pipeline-tls # <-- Décommenté et Nommé
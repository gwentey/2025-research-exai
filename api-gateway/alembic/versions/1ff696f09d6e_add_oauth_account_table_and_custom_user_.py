"""Add oauth_account table and custom user fields

Revision ID: 1ff696f09d6e
Revises: fba04aaef5fc
Create Date: 2025-05-03 19:29:40.223770

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ff696f09d6e'
down_revision: Union[str, None] = 'fba04aaef5fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_account',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('oauth_name', sa.String(length=100), nullable=False),
    sa.Column('access_token', sa.String(length=1024), nullable=False),
    sa.Column('expires_at', sa.Integer(), nullable=True),
    sa.Column('refresh_token', sa.String(length=1024), nullable=True),
    sa.Column('account_id', sa.String(length=320), nullable=False),
    sa.Column('account_email', sa.String(length=320), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('pseudo', sa.String(length=64), nullable=True))
    op.add_column('user', sa.Column('picture', sa.String(length=1024), nullable=True))
    op.add_column('user', sa.Column('given_name', sa.String(length=320), nullable=True))
    op.add_column('user', sa.Column('family_name', sa.String(length=320), nullable=True))
    op.add_column('user', sa.Column('locale', sa.String(length=10), nullable=True))
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_unique_constraint(None, 'user', ['pseudo'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_column('user', 'locale')
    op.drop_column('user', 'family_name')
    op.drop_column('user', 'given_name')
    op.drop_column('user', 'picture')
    op.drop_column('user', 'pseudo')
    op.create_table('alembic_version_selection',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_version_selection_pkc')
    )
    op.create_table('datasets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('row_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('column_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('size_bytes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('task_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('quality_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('preview_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('technical_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('ethical_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_modified_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='datasets_pkey')
    )
    op.create_index('ix_datasets_task_type', 'datasets', ['task_type'], unique=False)
    op.create_index('ix_datasets_id', 'datasets', ['id'], unique=False)
    op.drop_table('oauth_account')
    # ### end Alembic commands ###

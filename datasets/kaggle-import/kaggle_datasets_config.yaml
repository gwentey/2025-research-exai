datasets:
  # Education Domain
  student_performance:
    kaggle_ref: "spscientist/students-performance-in-exams"
    domain: "education"
    description: "Student performance analysis with various factors"
    ml_task: "classification"
    target_column: "math_score"
    
  student_stress:
    kaggle_ref: "samyakb/student-stress-factors"
    domain: "education" 
    description: "Analysis of stress factors affecting students"
    ml_task: "regression"
    target_column: "stress_level"
    
  student_depression:
    kaggle_ref: "adilshamim8/student-depression-dataset"
    domain: "education"
    description: "Mental health analysis of students"
    ml_task: "classification"
    target_column: "depression"
    
  social_media_addiction:
    kaggle_ref: "adilshamim8/social-media-addiction-vs-relationships"
    domain: "social"
    description: "Social media usage and mental health correlation"
    ml_task: "classification"
    target_column: "addiction_level"
    
  riiid_answer_prediction:
    kaggle_ref: "c/riiid-test-answer-prediction"
    domain: "education" 
    description: "Large-scale educational data for answer prediction (EdNet)"
    ml_task: "classification"
    target_column: "answered_correctly"
    large_dataset: true  # Indicate this is a large dataset
    competition_dataset: true  # Competition dataset - may have access restrictions
    alternative_ref: "pratyushrathore/ednet-dataset"  # Public alternative if competition data unavailable
    status: "competition_restricted"  # Indicates potential API access issues
    
  oulad_dataset:
    kaggle_ref: "vjcalling/ouladdata"
    domain: "education"
    description: "Open University Learning Analytics Dataset"
    ml_task: "classification"
    target_column: "final_result"
    multi_file: true  # Indicate this has multiple CSV files
    large_dataset: true  # Enable memory optimization
    chunk_size: 2000  # Smaller chunks for memory optimization (default: 10000)
    memory_optimized: true  # Use memory-efficient processing
    process_files_sequentially: true  # Process one file at a time to reduce memory usage
    
  academic_performance:
    kaggle_ref: "nikhil7280/student-performance-multiple-linear-regression"
    domain: "education"
    description: "Academic performance prediction with multiple factors"
    ml_task: "regression"
    target_column: "cgpa"

# Configuration globale
config:
  # Cache settings
  cache_duration_days: 7  # Re-download after 7 days
  
  # Processing settings
  convert_to_parquet: true
  chunk_size: 10000  # For large datasets (can be overridden per dataset)
  
  # Memory optimization settings
  memory_management:
    enable_gc_between_chunks: true  # Force garbage collection between chunks
    max_memory_usage_mb: 6000      # Maximum memory usage in MB before optimization
    pandas_low_memory: true        # Use low_memory option for pandas.read_csv
    disable_categorical_inference: true  # Disable automatic categorical detection for speed
  
  # Validation settings
  validate_after_download: true
  extract_metadata: true
  
  # Storage settings (UUID architecture)
  upload_to_storage: true
  cleanup_after_upload: true
  use_uuid_structure: true  # datasets/{uuid_dataset}/{uuid_file}.parquet
  
  # Database settings (UUID architecture)
  create_file_columns: true  # Créer les entrées FileColumn avec métadonnées
  analyze_column_types: true  # Analyser les types de données
  detect_pii: true           # Détecter les données personnelles
  
  # Kaggle API settings
  max_retries: 3
  timeout_seconds: 300
  
  # MinIO settings for local development
  minio:
    endpoint: "http://minio-service.ibis-x.svc.cluster.local:6700"
    bucket: "ibis-x-datasets"
    # Credentials are in environment variables 
